{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactJS\\\\movies-app2\\\\src\\\\common\\\\header\\\\Header.js\";\nimport React, { Component } from 'react';\nimport './Header.css';\nimport Button from '@material-ui/core/Button';\nimport logo from \"../../assets/logo.svg\";\nimport Modal from 'react-modal';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nconst customStylesForModal = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: '-100%',\n    transform: 'translate(50%,-50%)'\n  }\n};\n\nconst TabContainer = function (props) {\n  return React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      padding: 0,\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.children);\n}; // PropTypes which is used for checking required values are displaying or not\n\n\nTabContainer.prototype = {\n  children: PropTypes.node.isRequired\n};\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.openModalHandler = () => {\n      this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    this.closeModalHandler = () => {\n      this.setState({\n        modalIsOpen: false\n      });\n      console.log(this.state.isOpen);\n\n      if (this.state.isOpen === 'true') {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n    };\n\n    this.tabChangeHandler = (event, value) => {\n      this.setState({\n        value\n      });\n    };\n\n    this.loginClickHandler = () => {\n      this.state.username === \"\" ? this.setState({\n        userNameRequired: \"dispBlock\"\n      }) : this.setState({\n        userNameRequired: \"dispNone\"\n      });\n    };\n\n    this.inputUserNameChangeHandler = e => {\n      this.setState({\n        userName: e.target.value\n      });\n    };\n\n    this.formResetHandler = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      console.log(this.state.isOpen);\n    };\n\n    this.state = {\n      modalIsOpen: false,\n      value: 0,\n      userNameRequired: \"dispNone\",\n      username: \"\",\n      isOpen: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"app-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"app-logo\",\n      alt: \"app-log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"login-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      onClick: this.openModalHandler,\n      className: \"login-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(Modal, {\n      ariaHideApp: false,\n      isOpen: this.state.modalIsOpen,\n      contentLabel: \"Login\",\n      onRequestClose: this.closeModalHandler,\n      style: customStylesForModal,\n      dimiss: this.closeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: this.state.value,\n      className: \"tabs\",\n      onChange: this.tabChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), this.state.value === 0 && React.createElement(TabContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"UserName \"), React.createElement(Input, {\n      id: \"username\",\n      type: \"text\",\n      username: this.state.username,\n      onChange: this.inputUserNameChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(FormHelperText, {\n      className: this.state.userNameRequired,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Required\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Password \"), React.createElement(Input, {\n      id: \"password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.loginClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"LOGIN\"))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["E:\\reactJS\\movies-app2\\src\\common\\header\\Header.js"],"names":["React","Component","Button","Modal","Tabs","Tab","Typography","FormControl","InputLabel","Input","PropTypes","FormHelperText","customStylesForModal","content","top","left","right","bottom","marginRight","transform","TabContainer","props","padding","textAlign","children","prototype","node","isRequired","Header","constructor","openModalHandler","setState","modalIsOpen","closeModalHandler","console","log","state","isOpen","tabChangeHandler","event","value","loginClickHandler","username","userNameRequired","inputUserNameChangeHandler","e","userName","target","formResetHandler","render","logo","closeHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Header.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport logo from '../../assets/logo.svg';\r\nimport Modal from 'react-modal';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst customStylesForModal={\r\n    content:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        right:\"auto\",\r\n        bottom:\"auto\",\r\n        marginRight:'-100%',\r\n        transform:'translate(50%,-50%)'\r\n    }\r\n}\r\n\r\nconst TabContainer=function(props){\r\n    return(\r\n        <Typography component=\"div\" style={{padding:0, textAlign:\"center\"}}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n// PropTypes which is used for checking required values are displaying or not\r\nTabContainer.prototype={\r\n    children:PropTypes.node.isRequired\r\n}\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            modalIsOpen:false,\r\n            value:0,\r\n            userNameRequired:\"dispNone\",\r\n            username:\"\",\r\n            isOpen:true\r\n        };\r\n    }\r\n\r\n\r\n    openModalHandler=()=>{\r\n           this.setState({modalIsOpen:true})\r\n           \r\n    }\r\n    closeModalHandler=()=>{\r\n        this.setState({modalIsOpen:false});\r\n        console.log(this.state.isOpen);\r\n            if(this.state.isOpen==='true'){\r\n                this.setState({isOpen:!this.state.isOpen});\r\n\r\n            }\r\n        }\r\n    tabChangeHandler=(event,value)=>{\r\n            this.setState({value});\r\n    }\r\n\r\n    loginClickHandler=()=>{\r\n        this.state.username === \"\" ? this.setState({userNameRequired:\"dispBlock\"}) :this.setState({userNameRequired:\"dispNone\"});\r\n        \r\n    }\r\n    inputUserNameChangeHandler=(e)=>{\r\n            this.setState({userName:e.target.value})\r\n        }\r\n        formResetHandler=()=>{\r\n            this.setState({isOpen:!this.state.isOpen})\r\n        console.log(this.state.isOpen);\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"app-header\">\r\n                    <img src={logo} className=\"app-logo\" alt=\"app-log\" />\r\n                    <div className=\"login-button\">\r\n                      <Button variant=\"contained\" color=\"default\"  onClick={this.openModalHandler} className=\"login-button\">\r\n                        Login\r\n                     </Button>\r\n                    </div>\r\n                </header>\r\n                <Modal ariaHideApp={false} isOpen={this.state.modalIsOpen}\r\n                     contentLabel=\"Login\" onRequestClose={this.closeModalHandler}\r\n                        style={customStylesForModal} dimiss={this.closeHandler} >\r\n                    <Tabs value={this.state.value} className=\"tabs\" onChange={this.tabChangeHandler} >\r\n                        <Tab label=\"Login\"/>\r\n                        <Tab label=\"Register\"/>\r\n                    </Tabs>\r\n                    { this.state.value === 0 &&\r\n                    <TabContainer>\r\n                        {/* props.children is used to render that what is present inside the tabcontainer closing and opening tags\r\n                        will render to the browser */}\r\n                        <FormControl required>\r\n                            <InputLabel htmlFor=\"username\">UserName </InputLabel>\r\n                            <Input id=\"username\" type=\"text\" username={this.state.username} onChange={this.inputUserNameChangeHandler}/>\r\n                            \r\n                                <FormHelperText className={this.state.userNameRequired}>\r\n                                    <span className=\"red\">Required</span>\r\n                                 </FormHelperText>\r\n                        </FormControl>\r\n                            <br/><br/>\r\n                        <FormControl>\r\n                            <InputLabel htmlFor=\"password\">Password </InputLabel>\r\n                            <Input id=\"password\" type=\"password\"/>\r\n                        </FormControl>\r\n                        <br/>\r\n                        <br/>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.loginClickHandler}>LOGIN</Button>\r\n\r\n                    </TabContainer>\r\n                    }\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}