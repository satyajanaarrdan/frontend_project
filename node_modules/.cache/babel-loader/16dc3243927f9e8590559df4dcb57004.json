{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactJS\\\\movies-app2\\\\src\\\\screens\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport moviesData from '../../common/movieData';\nimport './Home.css';\nimport Header from \"../../common/header/Header\";\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Card from '@material-ui/core/Card';\nimport CardComponent from '@material-ui/core/CardContent';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport genres from '../Home/Genres';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  upcomingMoviesHeading: {\n    textAlign: 'center',\n    background: '#ff9999',\n    padding: '8px',\n    fontSize: '1rem'\n  },\n  gridListUpcomingMovies: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n    width: '100%'\n  },\n  gridListMain: {\n    transform: 'translateZ(0)',\n    cursor: 'pointer'\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 240\n  },\n  title: {\n    color: theme.palette.primary.light\n  }\n});\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.movieNameChangeHandler = event => {\n      this.setState({\n        movieName: event.target.value\n      }); // console.log(event.target.value);\n    };\n\n    this.state = {\n      movieName: '',\n      genres: []\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.upcomingMoviesHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"UpComing Movies..\")), React.createElement(GridList, {\n      cols: 5,\n      className: classes.gridListUpcomingMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, moviesData.map(movie => React.createElement(GridListTile, {\n      key: movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: movie.poster_url,\n      alt: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: movie.poster_url,\n      className: \"movie-poster\",\n      alt: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 350,\n      cols: 4,\n      className: classes.gridListMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, moviesData.map(movie => React.createElement(GridListTile, {\n      className: \"released-movie-grid-item\",\n      key: \"grid\" + movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: movie.poster_url,\n      className: \"movie-poster\",\n      alt: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: movie.title,\n      subtitle: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Release Date: \", new Date(movie.release_date).toDateString()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Find Moveis By:\")), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"movieName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Movie Name \"), React.createElement(Input, {\n      id: \"movieName\",\n      type: \"text\",\n      onChange: this.movieNameChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"select-multiple-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(Selecct, {\n      multiple: true,\n      Input: React.createElement(Input, {\n        id: \"select-multiple-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }),\n      renderValue: select => selecct.join(','),\n      value: this.state.genres,\n      onChange: this.genreSelectHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["E:\\reactJS\\movies-app2\\src\\screens\\Home\\Home.js"],"names":["React","Component","moviesData","Header","withStyles","GridList","GridListTile","GridListTileBar","Card","CardComponent","CardContent","FormControl","Typography","InputLabel","Input","genres","Select","styles","theme","root","flexGrow","backgroundColor","palette","background","paper","upcomingMoviesHeading","textAlign","padding","fontSize","gridListUpcomingMovies","flexWrap","transform","width","gridListMain","cursor","formControl","margin","spacing","unit","minWidth","title","color","primary","light","Home","constructor","movieNameChangeHandler","event","setState","movieName","target","value","state","render","classes","props","map","movie","id","poster_url","Date","release_date","toDateString","select","selecct","join","genreSelectHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport moviesData from '../../common/movieData';\r\nimport './Home.css';\r\nimport Header from \"../../common/header/Header\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardComponent from '@material-ui/core/CardContent';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport genres from '../Home/Genres';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    upcomingMoviesHeading: {\r\n        textAlign: 'center',\r\n        background: '#ff9999',\r\n        padding: '8px',\r\n        fontSize: '1rem'\r\n    },\r\n    gridListUpcomingMovies: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n        width: '100%'\r\n    },\r\n    gridListMain: {\r\n        transform: 'translateZ(0)',\r\n        cursor: 'pointer'\r\n    },\r\n    formControl:{\r\n        margin:theme.spacing.unit,\r\n        minWidth:240\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.light,\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n        constructor(){\r\n            super();\r\n            this.state={\r\n                movieName:'',\r\n                genres:[]\r\n            }\r\n        }\r\n    movieNameChangeHandler=(event)=>{\r\n            this.setState({movieName:event.target.value})\r\n           // console.log(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className={classes.upcomingMoviesHeading}>\r\n                    <span>UpComing Movies..</span>\r\n                </div>\r\n                <GridList cols={5} className={classes.gridListUpcomingMovies}>\r\n                    {moviesData.map(movie => (\r\n                        <GridListTile key={movie.id}>\r\n                            <img src={movie.poster_url} alt={movie.title} />\r\n                            <img src={movie.poster_url} className=\"movie-poster\" alt={movie.title} />\r\n                            <GridListTileBar title={movie.title}></GridListTileBar>\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n\r\n\r\n                <div className=\"flex-container\">\r\n                    <div className=\"left\">\r\n                        <GridList cellHeight={350} cols={4} className={classes.gridListMain}>\r\n                            {moviesData.map(movie => (\r\n                                <GridListTile className=\"released-movie-grid-item\" key={\"grid\" + movie.id}>\r\n                                    <img src={movie.poster_url} className=\"movie-poster\" alt={movie.title} />\r\n                                    <GridListTileBar\r\n                                        title={movie.title}\r\n                                        subtitle={<span>Release Date: {new Date(movie.release_date).toDateString()}</span>}\r\n                                    />\r\n                                </GridListTile>\r\n                            ))}\r\n                        </GridList>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <Card>\r\n                            <CardContent>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <Typography className={classes.title} color=\"textSecondary\">\r\n                                        Find Moveis By:\r\n                                    </Typography>\r\n                                </FormControl>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel htmlFor=\"movieName\" >Movie Name </InputLabel>\r\n                                    <Input id=\"movieName\" type=\"text\" onChange={this.movieNameChangeHandler} />\r\n                                </FormControl>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel htmlFor=\"select-multiple-checkbox\">Genre</InputLabel>\r\n                                    <Selecct multiple Input={<Input id=\"select-multiple-checkbox\"/>}\r\n                                    renderValue={select=>selecct.join(',')}\r\n                                    value={this.state.genres}\r\n                                    onChange={this.genreSelectHandler}>\r\n\r\n                                    </Selecct>\r\n                                </FormControl>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}