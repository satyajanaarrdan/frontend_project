{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactJS\\\\movies-app2\\\\src\\\\screens\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport moviesData from '../../common/movieData';\nimport './Home.css';\nimport Header from \"../../common/header/Header\";\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport genres from '../../common/genres';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport artists from '../../common/artists';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ReactDOM from 'react-dom';\nimport Details from '../details/details';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  upcomingMoviesHeading: {\n    textAlign: 'center',\n    background: '#ff9999',\n    padding: '8px',\n    fontSize: '1rem'\n  },\n  gridListUpcomingMovies: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n    width: '100%'\n  },\n  gridListMain: {\n    transform: 'translateZ(0)',\n    cursor: 'pointer'\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 240\n  },\n  title: {\n    color: theme.palette.primary.light\n  }\n});\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.movieNameChangeHandler = event => {\n      this.setState({\n        movieName: event.target.value\n      }); // console.log(event.target.value);\n    };\n\n    this.genreSelectHandler = event => {\n      this.setState({\n        genres: event.target.value\n      });\n    };\n\n    this.artistSelectHandler = event => {\n      this.setState({\n        artists: event.target.value\n      });\n    };\n\n    this.movieClickHandler = movieId => {\n      ReactDOM.render(React.createElement(Details, {\n        movieId: movieId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), document.getElementById('root'));\n    };\n\n    this.state = {\n      movieName: '',\n      genres: [],\n      artists: []\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.upcomingMoviesHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"UpComing Movies..\")), React.createElement(GridList, {\n      cols: 5,\n      className: classes.gridListUpcomingMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, moviesData.map(movie => React.createElement(GridListTile, {\n      key: movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: movie.poster_url,\n      alt: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: movie.poster_url,\n      className: \"movie-poster\",\n      alt: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 350,\n      cols: 4,\n      className: classes.gridListMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, moviesData.map(movie => React.createElement(GridListTile, {\n      onClick: () => this.movieClickHandler(movie.id),\n      className: \"released-movie-grid-item\",\n      key: \"grid\" + movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: movie.poster_url,\n      className: \"movie-poster\",\n      alt: movie.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: movie.title,\n      subtitle: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Release Date: \", new Date(movie.release_date).toDateString()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Find Moveis By:\")), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"movieName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Movie Name \"), React.createElement(Input, {\n      id: \"movieName\",\n      type: \"text\",\n      onChange: this.movieNameChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"select-multiple-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(Select, {\n      multiple: true,\n      Input: React.createElement(Input, {\n        id: \"select-multiple-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }) //  input={<Input id=\"select-multiple-checkbox-genre\" />}\n      ,\n      renderValue: select => select.join(','),\n      value: this.state.genres,\n      onChange: this.genreSelectHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"None\"), genres.map(genre => {\n      return React.createElement(MenuItem, {\n        key: genre.id,\n        value: genre.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: this.state.genres.indexOf(genre.name) > -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        primary: genre.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }));\n    }))), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"select-multiple-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Action\"), React.createElement(Select, {\n      multiple: true,\n      Input: React.createElement(Input, {\n        id: \"select-multiple-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }),\n      renderValue: select => select.join(','),\n      value: this.state.genres,\n      onChange: this.artistSelectHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"None\"), artists.map(artist => {\n      return React.createElement(MenuItem, {\n        key: artist.id,\n        value: artist.first_name + \" \" + artist.last_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: this.state.artists.indexOf(artist.first_name + \" \" + artist.last_name) > -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        primary: artist.first_name + \" \" + artist.last_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    }))), React.createElement(\"formControl\", {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"releaseDateStart\",\n      label: \"Release Date Start\",\n      type: \"date\",\n      defaultValue: \"\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"formControl\", {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"releaseDateEnd\",\n      label: \"Release Date End \",\n      type: \"date\",\n      defaultValue: \"\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"APPLY\")))))));\n  }\n\n}\n\nexport default withStyles(styles)(Home);","map":{"version":3,"sources":["E:\\reactJS\\movies-app2\\src\\screens\\Home\\Home.js"],"names":["React","Component","moviesData","Header","withStyles","GridList","GridListTile","GridListTileBar","Card","CardContent","FormControl","Typography","InputLabel","Input","genres","Select","MenuItem","ListItemText","Checkbox","artists","TextField","Button","ReactDOM","Details","styles","theme","root","flexGrow","backgroundColor","palette","background","paper","upcomingMoviesHeading","textAlign","padding","fontSize","gridListUpcomingMovies","flexWrap","transform","width","gridListMain","cursor","formControl","margin","spacing","unit","minWidth","title","color","primary","light","Home","constructor","movieNameChangeHandler","event","setState","movieName","target","value","genreSelectHandler","artistSelectHandler","movieClickHandler","movieId","render","document","getElementById","state","classes","props","map","movie","id","poster_url","Date","release_date","toDateString","select","join","genre","name","indexOf","artist","first_name","last_name","shrink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport moviesData from '../../common/movieData';\r\nimport './Home.css';\r\nimport Header from \"../../common/header/Header\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport genres from '../../common/genres';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport artists from '../../common/artists';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactDOM from 'react-dom';\r\nimport Details from '../details/details';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    upcomingMoviesHeading: {\r\n        textAlign: 'center',\r\n        background: '#ff9999',\r\n        padding: '8px',\r\n        fontSize: '1rem'\r\n    },\r\n    gridListUpcomingMovies: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n        width: '100%'\r\n    },\r\n    gridListMain: {\r\n        transform: 'translateZ(0)',\r\n        cursor: 'pointer'\r\n    },\r\n    formControl:{\r\n        margin:theme.spacing.unit,\r\n        minWidth:240\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.light,\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n        constructor(){\r\n            super();\r\n            this.state={\r\n                movieName:'',\r\n                genres:[],\r\n                artists: []\r\n            }\r\n        }\r\n    movieNameChangeHandler=(event)=>{\r\n            this.setState({movieName:event.target.value});\r\n           // console.log(event.target.value);\r\n    }\r\n\r\n    genreSelectHandler=(event)=>{\r\n        this.setState({genres:event.target.value})\r\n    }\r\n    artistSelectHandler=(event)=>{\r\n        this.setState({artists:event.target.value});\r\n    }\r\n\r\n    movieClickHandler=(movieId)=>{\r\n\r\n        ReactDOM.render(<Details movieId={movieId}/>,document.getElementById('root'));\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className={classes.upcomingMoviesHeading}>\r\n                    <span>UpComing Movies..</span>\r\n                </div>\r\n                <GridList cols={5} className={classes.gridListUpcomingMovies}>\r\n                    {moviesData.map(movie => (\r\n                        <GridListTile key={movie.id}>\r\n                            <img src={movie.poster_url} alt={movie.title} />\r\n                            <img src={movie.poster_url} className=\"movie-poster\" alt={movie.title} />\r\n                            <GridListTileBar title={movie.title}></GridListTileBar>\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n\r\n\r\n                <div className=\"flex-container\">\r\n                    <div className=\"left\">\r\n                        <GridList cellHeight={350} cols={4} className={classes.gridListMain}>\r\n                            {moviesData.map(movie => (\r\n                                <GridListTile onClick={()=>this.movieClickHandler(movie.id)} className=\"released-movie-grid-item\" key={\"grid\" + movie.id }>\r\n                                    <img src={movie.poster_url} className=\"movie-poster\" alt={movie.title} />\r\n                                    <GridListTileBar\r\n                                        title={movie.title}\r\n                                        subtitle={<span>Release Date: {new Date(movie.release_date).toDateString()}</span>}\r\n                                    />\r\n                                </GridListTile>\r\n                            ))}\r\n                        </GridList>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <Card>\r\n                            <CardContent>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <Typography className={classes.title} color=\"textSecondary\">\r\n                                        Find Moveis By:\r\n                                    </Typography>\r\n                                </FormControl>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel htmlFor=\"movieName\" >Movie Name </InputLabel>\r\n                                    <Input id=\"movieName\" type=\"text\" onChange={this.movieNameChangeHandler} />\r\n                                </FormControl>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel htmlFor=\"select-multiple-checkbox\">Genre</InputLabel>\r\n                                    <Select multiple Input={<Input id=\"select-multiple-checkbox\"/>}\r\n                                    //  input={<Input id=\"select-multiple-checkbox-genre\" />}\r\n                                    renderValue={select=>select.join(',')}\r\n                                    value={this.state.genres}\r\n                                    onChange={this.genreSelectHandler}>\r\n                                        <MenuItem value=\"0\">None</MenuItem>\r\n                                        {genres.map(genre=> {\r\n                                          return  <MenuItem key={genre.id} value={genre.name}>\r\n                                                <Checkbox checked={this.state.genres.indexOf(genre.name)>-1}/>\r\n                                                <ListItemText primary={genre.name}/>\r\n                                            </MenuItem>\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel htmlFor=\"select-multiple-checkbox\">Action</InputLabel>\r\n                                    <Select multiple Input={<Input id=\"select-multiple-checkbox\"/>}\r\n                                    renderValue={select=>select.join(',')}\r\n                                    value={this.state.genres}\r\n                                    onChange={this.artistSelectHandler}>\r\n                                        <MenuItem value=\"0\">None</MenuItem>\r\n                                        {artists.map(artist=> {\r\n                                          return    <MenuItem key={artist.id} value={artist.first_name + \" \" + artist.last_name}>\r\n                                          <Checkbox checked={this.state.artists.indexOf(artist.first_name + \" \" + artist.last_name) > -1} />\r\n                                          <ListItemText primary={artist.first_name + \" \" + artist.last_name} />\r\n                                      </MenuItem>\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <formControl className={classes.formControl}>\r\n                                      <TextField\r\n                                      id=\"releaseDateStart\"\r\n                                      label=\"Release Date Start\"\r\n                                      type=\"date\"\r\n                                      defaultValue=\"\"\r\n                                      InputLabelProps={{shrink:true}}/>\r\n\r\n                                    </formControl>\r\n\r\n                                    <formControl className={classes.formControl}>\r\n                                      <TextField\r\n                                      id=\"releaseDateEnd\"\r\n                                      label=\"Release Date End \"\r\n                                      type=\"date\"\r\n                                      defaultValue=\"\"\r\n                                      InputLabelProps={{shrink:true}}/>\r\n\r\n                                    </formControl>\r\n                                    <br /><br />\r\n                                <FormControl className={classes.formControl}>\r\n                                    <Button variant=\"contained\" color=\"primary\">\r\n                                        APPLY\r\n                                    </Button>\r\n                                </FormControl>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}